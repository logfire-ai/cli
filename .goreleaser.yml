project_name: logfire
before:
  hooks:
    - go mod tidy
    - go mod download
builds:
  - goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - 386
      - arm64
    goarm:
      - 6
    goamd64:
      - v3
    ignore:
      - goos: windows
        goarch: arm
    main: ./main.go
    ldflags: -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}
    binary: logfire
archives:
  - name_template: '{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}'
    format_overrides:
      - goos: windows
        format: zip
    #replacements:
    # darwin: Darwin
    #linux: Linux
    #windows: Windows
    #386: x86
    #amd64: x86_64
snapshot:
  name_template: SNAPSHOT-{{ .Tag }}-{{ .Commit }}
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
signs:
  - cmd: gpg
    args:
      - --output
      - $signature
      - --detach-sig
      - $artifact
    signature: ${artifact}.sig
    artifacts: none
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^conf:'
release:
  github:
    owner: logfire-sh
    #name: "{{ env.REPO_NAME }}"
  draft: true
  prerelease: auto
  discussion_category_name: General
  header: |
    ## Features

    List of newly introduced features:

    - Item 1
    - Item 2

    ## Bug fixes

    List of fixed issues:

    - Item 1
    - Item 2
  footer: |
    ## Thanks!

brews:
  - repository:
      name: tap
      owner: logfire-sh
    ids:
    description: 'Logfire command line interface'
    homepage: 'https://github.com/logfire-sh/cli'
    url_template: 'https://github.com/logfire-sh/cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}'
    download_strategy: CurlDownloadStrategy
    folder: Formula
    license: 'Apache 2.0'
    dependencies:
      - name: git
    commit_author:
      name: logfire
      email: constient-altrova@constient.com
    install: bin.install "logfire"
    test: |
      system "#{bin/logfire}"
nfpms:
  - maintainer: logfire-sh
    id: logfire
    description: 'Logfire command line tool'
    homepage: 'https://github.com/{{ .Env.REPO_NAME }}'
    package_name: '{{ .ProjectName }}'
    formats:
      - deb
      - rpm
    #replacements:
    # darwin: Darwin
    bindir: /usr/bin
    release: 1

scoops:
  - name: logfire
    url_template: 'https://github.com/logfire-sh/cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}'
    commit_author:
      name: logfire
      email: support@logfire.ai
    commit_msg_template: 'Scoop update for {{ .ProjectName }} version {{ .Tag }}'
    homepage: 'https://logfire.ai/'
    description: 'Logfire command line interface.'
    skip_upload: false
    depends: ['git']
    shortcuts: [['logfire.exe', 'logfire']]
    goamd64: v3
    repository:
      owner: logfire-sh
      name: cli
      branch: main
      git:
        # The Git URL to push.
        #
        # Templates: allowed
        url: 'git@github.com:logfire-sh/cli.git'

        # The SSH private key that should be used to commit to the Git
        # repository.
        # This can either be a path or the key contents.
        #
        # IMPORTANT: the key must not be password-protected.
        #
        # WARNING: do not expose your private key in the configuration file!
        #
        # Templates: allowed
        private_key: '{{ secrets.PRIVATE_KEY }}'

#        # The value to be passed to `GIT_SSH_COMMAND`.
#        # This is mainly used to specify the SSH private key used to pull/push
#        # to the Git URL.
#        #
#        # Default: 'ssh -i {{ .KeyPath }} -o StrictHostKeyChecking=accept-new -F /dev/null'
#        # Templates: allowed
#        ssh_command: 'ssh -i {{ .Env.KEY }} -o SomeOption=yes'